daemon off;

worker_processes 4;

events {
  worker_connections 16384;
}

http {
  # http://nginx.org/en/docs/http/ngx_http_core_module.html
  types_hash_max_size 2048;
  server_names_hash_max_size 512;
  server_names_hash_bucket_size 64;

  variables_hash_bucket_size 256;
  # bite-460
  client_max_body_size 128m;

  # Optimise
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/certs/dhparam.pem;
  ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";
  ssl_session_cache shared:SSL:100m;
  ssl_session_timeout 30m;

  # Security Headers
  # BITE-1371 Security Headers 1
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  log_format proxied_combined '"$http_x_forwarded_for" - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" $request_time';

  error_log /dev/stderr info;
  access_log /dev/stdout proxied_combined;

  server {

    # BITE-1368 Remove NGINX version number
    server_tokens off;

    listen 443 ssl default_server;
    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    listen   80 default_server;

    location / {
      root   /usr/share/nginx/html;
      index index.html index.htm;
    }
    location /ELBHealthCheck {
      root /var/www/healthcheck/;
    }
    location /nginx_status { # Used by sysdig-agent only. Exclude in Nginx logs.
      stub_status on;
      access_log off;
      allow 127.0.0.1/32;
      deny all;
    }
    location /usr_nginx_status { # Used by user with Nginx log enabled. No access control.
      stub_status on;
    }
  }
{{range $i := .}}
{{if $i.Host}}
  {{if $i.BlueGreen}}
  {{range $path := $i.Paths}}
  map $http_x_bluegreen_backend ${{$i.Name}}_{{replace $path.Service "-" "_"}}_backend {
    default "{{$i.DefaultUrl $path}}";
    {{$url := $i.BlueUrl $path}}
    blue    "{{$url}}";
    {{$url := $i.GreenUrl $path}}
    green   "{{$i.GreenUrl $path}}";
  }
  {{end}}{{/* range $path := $i.Paths */}}
  {{end}}{{/* if $i.BlueGreen */}}
  {{if not $i.Nonssl}}
  server {
    # BITE-1446 NGINX security improvements - Remove NGINX version number
    server_tokens off;
    # cops-479 - Add 301 redirect if httpsOnly is set to true.
    listen  80;
    server_name {{$i.Host}};
    resolver kube-dns.kube-system.svc.cluster.local;
    return  301  https://$server_name$request_uri;
  }
  {{end}}{{/* if not $i.Nonssl */}}

  server {
    # BITE-1446 NGINX security improvements - Remove NGINX version number
    server_tokens off;
    server_name {{$i.Host}};
    resolver kube-dns.kube-system.svc.cluster.local;
    {{if $i.Ssl}}
    listen 443 ssl;
    ssl_certificate   /etc/nginx/certs/{{$i.Host}}.crt;
    ssl_certificate_key /etc/nginx/certs/{{$i.Host}}.key;
    {{end}}{{/* if $i.Ssl */}}
    {{if $i.Nonssl}}
    listen 80;
    {{end}}{{/* if $i.Nonssl */}}
    # cops-165 - This will intercept the back-end errors and forward a custom
    # error page in the Nginx node.
    proxy_intercept_errors on;

    # cops-165 - get custom error pages
    error_page 502 503 504 /error_{{$i.Name}}.html;
    location = /error_{{$i.Name}}.html {
        # Add header in 3XX 4XX and 5XX will only work in Nginx > 1.7
        add_header X-Loadbalancer-Id {{$i.GetPodName}};
        add_header X-Upstream-IP $upstream_addr;
        # BITE-1446 NGINX security improvements - Security Headers
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        root /usr/share/nginx/html;
    }

    {{range $path := $i.Paths}}
    location {{$path.URI}} {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # cops-374 - Will forward the Nginx pod name as a custom header
      add_header X-Loadbalancer-Id {{$i.GetPodName}};
      # BITE-1446 NGINX security improvements - Security Headers
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      {{if $i.BlueGreen}}
      # proxy_pass ${{$i.Name}}_{{replace $path.Service "-" "_"}}_backend;
      set $upstream_{{$i.Name}}_{{replace $path.Service "-" "_"}}_backend ${{$i.Name}}_{{replace $path.Service "-" "_"}}_backend;
      proxy_pass $upstream_{{$i.Name}}_{{replace $path.Service "-" "_"}}_backend;
      {{else}}{{/* if $i.BlueGreen */}}
      # proxy_pass {{$i.DefaultUrl $path}};
      set $upstream_{{$i.Name}}_{{replace $path.Service "-" "_"}}_backend {{$i.DefaultUrl $path}};
      proxy_pass $upstream_{{$i.Name}}_{{replace $path.Service "-" "_"}}_backend;
      {{end}}{{/* if $i.BlueGreen */}}
    }
    {{end}}{{/* range $path := $i.Paths */}}
  }
{{end}}{{/* if $i.Host */}}
{{end}}{{/* range $i := . */}}
}
