daemon off;

worker_processes 4;

events {
  worker_connections 16384;
}

http {
  # http://nginx.org/en/docs/http/ngx_http_core_module.html
  types_hash_max_size 2048;
  server_names_hash_max_size 512;
  server_names_hash_bucket_size 64;

  variables_hash_bucket_size 256;
  # bite-460
  client_max_body_size 128m;

  # Optimize
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_session_cache shared:SSL:100m;
  ssl_session_timeout 30m;

  log_format proxied_combined '"$http_x_forwarded_for" - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" $request_time';

  error_log /dev/stderr info;
  access_log /dev/stdout proxied_combined;

  server {

    listen 443 ssl default_server;
    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    listen   80 default_server;

    location / {
      root   /usr/share/nginx/html;
      index index.html index.htm;
    }
    location /ELBHealthCheck {
      root /var/www/healthcheck/;
    }
    location /nginx_status { # Used by sysdig-agent only. Exclude in Nginx logs.
      stub_status on;
      access_log off;
      allow 127.0.0.1/32;
      deny all;
    }
    location /usr_nginx_status { # Used by user with Nginx log enabled. No access control.
      stub_status on;
    }
  }
{{range $i := .}}

  {{ if $i.BlueGreen }}
  {{ range $path := $i.Paths }}
  map $http_x_bluegreen_backend ${{ $i.Name }}_{{ replace $path.Service "-" "_" }}_backend {
    default "{{ $i.DefaultUrl $path }}";
    {{ $url := $i.BlueUrl $path }}
    {{ if $i.IsValidUrl $url }}
    blue    "{{ $url }}";
    {{ end }}
    {{ $url := $i.GreenUrl $path }}
    {{ if $i.IsValidUrl $url }}
    green   "{{ $i.GreenUrl $path }}";
    {{ end }}
  }
  {{ end }}
  {{ end }}
  {{if not $i.Nonssl}}
  server {
  # cops-479 - Add 301 redirect if httpsOnly is set to true.
    listen  80;
    server_name {{$i.Host}};
    resolver kube-dns.kube-system.svc.cluster.local;
    return  301  https://$server_name$request_uri;
  }{{end}}

  server {
    server_name {{$i.Host}};
    resolver kube-dns.kube-system.svc.cluster.local;
{{if $i.Ssl}}
    listen 443 ssl;
    ssl_certificate   /etc/nginx/certs/{{$i.Host}}.crt;
    ssl_certificate_key /etc/nginx/certs/{{$i.Host}}.key;
{{end}}
{{if $i.Nonssl}}    listen 80;{{end}}
{{ range $path := $i.Paths }}
    location {{$path.URI}} {
      proxy_set_header Host $host;
      # cops-374 - Will forward the Nginx pod name as a custom header
      add_header X-Loadbalanacer-Id {{$i.GetPodName}};
      {{ if $i.BlueGreen }}
      proxy_pass ${{ $i.Name }}_{{ replace $path.Service "-" "_"}}_backend;
      {{ else }}
      proxy_pass {{ $i.DefaultUrl $path }};
      {{ end }}
    }
{{end}}
  }{{end}}
}
